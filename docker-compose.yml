services:
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: ecp-elasticsearch1
    volumes:
      - ./certs:/usr/share/elasticsearch/config/certs:ro
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    restart: always
    environment:
      - node.name=ecp-elasticsearch1
      - cluster.name=${CLUSTER_NAME}
      - discovery.seed_hosts=ecp-elasticsearch1,ecp-elasticsearch2
      - cluster.initial_master_nodes=ecp-elasticsearch1,ecp-elasticsearch2
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=/usr/share/elasticsearch/config/certs/live/namedns.pe/privkey.pem
      - xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/certs/live/namedns.pe/fullchain.pem
      - xpack.security.http.ssl.certificate_authorities=/usr/share/elasticsearch/config/certs/live/namedns.pe/chain.pem
      - xpack.security.http.ssl.verification_mode=certificate
      - xpack.security.http.ssl.client_authentication=optional
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=/usr/share/elasticsearch/config/certs/live/namedns.pe/privkey.pem
      - xpack.security.transport.ssl.certificate=/usr/share/elasticsearch/config/certs/live/namedns.pe/cert.pem
      - xpack.security.transport.ssl.certificate_authorities=/usr/share/elasticsearch/config/certs/live/namedns.pe/chain.pem
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.client_authentication=optional
      - xpack.security.http.ssl.supported_protocols=["TLSv1.2","TLSv1.3"]
      - xpack.security.transport.ssl.supported_protocols=["TLSv1.2","TLSv1.3"]
      - xpack.security.http.ssl.cipher_suites=["TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384","TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"]
      - xpack.security.transport.ssl.cipher_suites=["TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384","TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"]
      - xpack.license.self_generated.type=${LICENSE}
      - http.max_content_length=200mb
      - logger.level=debug
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert /usr/share/elasticsearch/config/certs/live/namedns.pe/chain.pem -u elastic:${ELASTIC_PASSWORD} https://elasticsearch.namedns.pe/_cluster/health | grep -q '\"status\":\"green\"'"
        ]
      interval: 60s
      timeout: 20s
      retries: 5
    networks:
     - shared_network
  
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: ecp-elasticsearch2
    volumes:
      - esdata02:/usr/share/elasticsearch/data
      - ./certs:/usr/share/elasticsearch/config/certs:ro
    environment:
      - node.name=ecp-elasticsearch2
      - cluster.name=${CLUSTER_NAME}
      - discovery.seed_hosts=ecp-elasticsearch1,ecp-elasticsearch2
      - cluster.initial_master_nodes=ecp-elasticsearch1,ecp-elasticsearch2
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=/usr/share/elasticsearch/config/certs/live/namedns.pe/privkey.pem
      - xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/certs/live/namedns.pe/fullchain.pem
      - xpack.security.http.ssl.certificate_authorities=/usr/share/elasticsearch/config/certs/live/namedns.pe/chain.pem
      - xpack.security.http.ssl.verification_mode=certificate
      - xpack.security.http.ssl.client_authentication=optional
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=/usr/share/elasticsearch/config/certs/live/namedns.pe/privkey.pem
      - xpack.security.transport.ssl.certificate=/usr/share/elasticsearch/config/certs/live/namedns.pe/cert.pem
      - xpack.security.transport.ssl.certificate_authorities=/usr/share/elasticsearch/config/certs/live/namedns.pe/chain.pem
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.client_authentication=optional
      - xpack.security.http.ssl.supported_protocols=["TLSv1.2","TLSv1.3"]
      - xpack.security.transport.ssl.supported_protocols=["TLSv1.2","TLSv1.3"]
      - xpack.security.http.ssl.cipher_suites=["TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384","TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"]
      - xpack.security.transport.ssl.cipher_suites=["TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384","TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"]
      - xpack.license.self_generated.type=${LICENSE}
      - http.max_content_length=200mb
      - logger.level=debug
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert /usr/share/elasticsearch/config/certs/live/namedns.pe/chain.pem -u elastic:${ELASTIC_PASSWORD} https://elasticsearch.namedns.pe/_cluster/health | grep -q '\"status\":\"green\"'"
        ]
      interval: 60s
      timeout: 20s
      retries: 5
    networks:
      - shared_network

  kibana:
    depends_on:
      elasticsearch1:
        condition: service_healthy
      elasticsearch2:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: ecp-kibana
    volumes:
      - ./certs:/usr/share/kibana/config/certs:ro
      - kibanadata:/usr/share/kibana/data
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - ${KIBANA_PORT}:5601
    restart: always
    environment:
      - SERVER_NAME=ecp-kibana
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOST}
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTIC_APM_SECRET_TOKEN=${ELASTIC_APM_SECRET_TOKEN}
      - KIBANA_HOST=${KIBANA_HOST}
      - FLEET_URL=${FLEET_URL}
      - APM_URL=${APM_URL}
      - SERVER_SSL_ENABLED=true
      - SERVER_SSL_CERTIFICATE=/usr/share/kibana/config/certs/live/namedns.pe/fullchain.pem
      - SERVER_SSL_KEY=/usr/share/kibana/config/certs/live/namedns.pe/privkey.pem
      - FLEET_SERVER_SERVICE_TOKEN=${FLEET_SERVER_SERVICE_TOKEN}
    mem_limit: ${MEM_LIMIT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -I -s --cacert /usr/share/kibana/config/certs/live/namedns.pe/chain.pem https://kibana.namedns.pe | grep -q 'HTTP/1.1 302 Found'"
        ]
      interval: 60s
      timeout: 20s
      retries: 5
    networks:
     - shared_network

  fleet-server:
    depends_on:
      kibana:
        condition: service_healthy
      elasticsearch1:
        condition: service_healthy
      elasticsearch2:
        condition: service_healthy
    image: docker.elastic.co/beats/elastic-agent:${STACK_VERSION}
    container_name: ecp-fleet-server
    volumes:
      - ./certs:/certs:ro
      - ./elastic-agent.yml:/usr/share/elastic-agent/elastic-agent.yml:ro
      - fleetserverdata:/usr/share/elastic-agent
    ports:
      - ${FLEET_PORT}:8220
      - ${APMSERVER_PORT}:8200
    restart: always
    user: root
    environment:
      - APM_URL=${APM_URL}
      - SSL_CERTIFICATE_AUTHORITIES=/certs/live/namedns.pe/chain.pem
      - CERTIFICATE_AUTHORITIES=/certs/live/namedns.pe/chain.pem
      - FLEET_CA=/certs/live/namedns.pe/chain.pem
      - FLEET_SERVER_CERT=/certs/live/namedns.pe/fullchain.pem
      - FLEET_SERVER_CERT_KEY=/certs/live/namedns.pe/privkey.pem
      - FLEET_SERVER_ELASTICSEARCH_CA=/certs/live/namedns.pe/chain.pem
      - FLEET_ENROLL=1
      - FLEET_ENROLLMENT_TOKEN=${ENROLLMENT_TOKEN}  # Token de inscripci√≥n
      - FLEET_URL=${FLEET_URL}
      - FLEET_SERVER_POLICY_ID=fleet-server-policy
      - FLEET_SERVER_ENABLE=true
      - FLEET_SERVER_ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
      - FLEET_SERVER_SERVICE_TOKEN=${FLEET_SERVER_SERVICE_TOKEN}  # Token de servicio
      - KIBANA_FLEET_CA=/certs/live/namedns.pe/chain.pem
      - KIBANA_FLEET_SETUP=1
      - KIBANA_HOST=${KIBANA_HOST}
      - KIBANA_FLEET_USERNAME=${ELASTIC_USERNAME}
      - KIBANA_FLEET_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -I -s --cacert /certs/live/namedns.pe/chain.pem https://fleet-server.namedns.pe | grep -q 'HTTP/1.1 200 OK'"
        ]
      interval: 60s
      timeout: 20s
      retries: 5
    networks:
     - shared_network

networks:
  shared_network:
    external: true

volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local    
  kibanadata:
    driver: local
  fleetserverdata:
    driver: local
